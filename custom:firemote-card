alias: Hisense TV MQTT Actions
fields:
  key_name:
    description: The key or action name (e.g., KEY_VOLUMEUP, INPUT_HDMI_1, NETFLIX)
    example: KEY_VOLUMEUP
sequence:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'POWER' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: switch.hisense_tv
                    state: "on"
                sequence:
                  - target:
                      entity_id: switch.hisense_tv
                    action: switch.turn_off
              - conditions:
                  - condition: state
                    entity_id: switch.hisense_tv
                    state: "off"
                sequence:
                  - target:
                      entity_id: switch.hisense_tv
                    action: switch.turn_on
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'INPUT_TV' }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/ui_service/XX:XX:XX:XX:XX:XX$normal/actions/changesource
              payload: >-
                {"displayname":"TV","sourceid":"0","sourcename":"TV"}
            action: mqtt.publish
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'INPUT_HDMI_1' }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/ui_service/XX:XX:XX:XX:XX:XX$normal/actions/changesource
              payload: >-
                {"displayname":"HDMI1","sourceid":"4","sourcename":"HDMI1"}
            action: mqtt.publish
      # Adding new commands
      - conditions:
          - condition: template
            value_template: "{{ key_name in ['KEY_POWER', 'KEY_UP', 'KEY_DOWN', 'KEY_LEFT', 'KEY_RIGHT', 'KEY_RETURNS', 'KEY_MENU', 'KEY_EXIT', 'KEY_OK', 'KEY_HOME', 'KEY_VOLUMEUP', 'KEY_VOLUMEDOWN', 'KEY_MUTE', 'KEY_FORWARDS', 'KEY_BACK', 'KEY_STOP', 'KEY_PLAY', 'KEY_PAUSE', 'KEY_0', 'KEY_1', 'KEY_2', 'KEY_3', 'KEY_4', 'KEY_5', 'KEY_6', 'KEY_7', 'KEY_8', 'KEY_9', 'KEY_SUBTITLE'] }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/remote_service/XX:XX:XX:XX:XX:XX$normal/actions/sendkey
              payload: "{{ key_name }}"
            action: mqtt.publish
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'NETFLIX' }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/ui_service/XX:XX:XX:XX:XX:XX$normal/actions/launchapp
              payload: >-
                {"appId":"1","name":"Netflix","url":"netflix","urlType":37}
            action: mqtt.publish
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'HAYU' }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/ui_service/XX:XX:XX:XX:XX:XX$normal/actions/launchapp
              payload: >-
                {"appId":"1","name":"Hayu","url":"hayu","urlType":37}
            action: mqtt.publish
      - conditions:
          - condition: template
            value_template: "{{ key_name == 'PLEX' }}"
        sequence:
          - data:
              topic: >-
                /remoteapp/tv/ui_service/XX:XX:XX:XX:XX:XX$normal/actions/launchapp
              payload: >-
                {"appId":"1","name":"Plex","url":"plex","urlType":37}
            action: mqtt.publish
    default:
      - data:
          name: Hisense TV MQTT
          message: "Invalid key_name: {{ key_name }} provided."
        action: logbook.log
mode: single
